Първа среща на екипа за разработване на книгата "Въведение в програмирането с Java"
-----------------------------------------------------------------------------------

Дневен ред:
1) Запознаване с проекта: мисия и цели; схема на работа; план на проекта; лиценз за използване и разпространение; изисквания към авторите и редакторите; какво печелят авторите и редакторите?
2) Преглед на учебното съдържание
3) Преглед на лекциите на НАРС
4) Указания за авторите
5) Указания за редакторите
6) Разпределение на темите - кой коя тема ще поеме
7) Свободна дискусия

------------------------------------------------------
 

Резюме от срещата:

1) Имаме обновена версия на разпределението със следните промени:

 - За всяка тема има посочен автор. Тук имам следната забележка: авторите, сложени с въпросителна са евентуални и могат да бъдат променени.

 - За всяка тема има посочен редактор. Посочил съм поне един редактор, но това не изключва възможността да имаме повече от един, както и да променяме редакторите.

 - Оценил съм ориентировъчно усилията (брой часове труд) за всяка лекция. Оценката е много груба и не може да й се вярва много, но е по-добре от никаква оценка. Със сигурност може да се види поне кои теми са по-обемни и кои са по-кратки. Оценявал съм пропорционално на броя слайдове, които имаме.

 - Оценил съм ориентировъчно броя страници, които трябва да се получат. Не вярвайте много на това число. Извадих го като статистика от предната книга за .NET, която също беше правена по готови слайдове и измерих съотношението между слайдовете и броя страници. Мисля, че може да ви послужи за някакъв съвсем груб ориентир, в случай че някой се притеснява дали обемът е правилно съобразен (понеже на срещата на екипа имаше такъв въпрос: колко страници трябва да напиша по тази глава?). В крайна сметка излиза, че трябва да очакваме книгата да се получи около 850 страници.

 

2) Изпращам ви PDF версията на слайдовете от лекциите на НАРС. Не съм ги сложил в хранилището, защото то е публично достъпно, а материалите са за ваше ползване само. Имаме политика да избягваме да раздаваме PowerPoint лекциите, защото това дава на конкуренцията възможност да ползва директно нашите учебни материали. Въпреки това бих могъл да направя изключение за единични теми, така че ако някой иска да му пратя PowerPoint версията на неговата тема, да ми пише.

 

3) Изпращам контактите на всички автори (без телефоните). Така се уговорихме на срещата. Няма да ги слагам публично на SVN сървъра.

 

4) Направих проект в Google Code за книгата. Това е адресът на проекта:

http://code.google.com/p/introjavabook/

На срещата се уговорихме да ползваме Google Code като среда за работа в екип и Subversion като repository за всички документите и ресурси по проекта. Направим съм администратори на проекта 3 души и всеки от тях може да добавя нови членове:

 - Светлин Наков - svetlin@nakov.com

 - Борис Червенков - boris.chervenkov@sentido.bg

 - Лъчезар Цеков - luchesar@gmail.com

Ако не правите промени, можете да ползвате SVN сървъра анонимно (без парола) от този адрес:

http://introjavabook.googlecode.com/svn/trunk/

Ако правите промени (което ще се наложи в някой хубав момент), ще трябва да направите следното:

Първо: Да си направите Google акаунт от тук: https://www.google.com/accounts/NewAccount

Второ: Да пратите мейла си на някой от администраторите на проекта, за да ви добави. До момента съм добавил следните акаунти:

panayot.dobrikov@sap.com, 

nofearinc@gmail.com, 

alexdobrev@gmail.com, 

nikolay.vasilev@gmail.com, 

iwu.ivanov@gmail.com, 

vesko.kolev@gmail.com, 

radoslav.h.i@gmail.com, 

adalmirant@abv.bg

svetlin@nakov.com, 

boris.chervenkov@sentido.bg, 

luchesar@gmail.com

На всички останали не знам акаунтите и очаквам да ми ги пратят.

Трето: Да си изтеглите някакъв клиент за Subversion. Аз лично ползвам TortoiseSVN-1.4.8. Върши отлична работа. Предупреждавам ви да не си слагате последната версия TortoiseSVN-1.5.0 защото има някакъв проблем и машината ви ще заспива от време на време за по няколко секунди. Повярвайте ми, много е зле! Аз 2-3 дни псувах докато разбера какво става, дори на срещата ми машината зависваше докато си обсъждахме проекта.

Четвърто: Да си направите SVN Checkout на проекта от този адрес: https://introjavabook.googlecode.com/svn/trunk. Използвайте https, иначе не става. За потребител дайте своя Google account email. Паролата не е тази, която се ползва за Google, а е друга. Можете да я дръпнете от тук: http://code.google.com/hosting/settings.  

 

5) На срещата решихме да разделим по-обемните теми на части, за да намалим риска някой да има да пише прекалено голям обем текст. От опит знаем, че процентът на завършилите в срок при големи обеми е нисък. По случая темите са със сменени номера! Директориите в SVN сървъра съответстват на актуалната номерация на темите.

 

6) Дискутирахме всички картинки в книгата да са в EMF или PNG формат. Моля ползвайте само тези формати. Решихме всички картинки от книгата да ги слагаме в директория <root>\resources\images.

 

7) За въведителната тема (Глава 1) решихме следното:

 - Да се добави във въведителната тема пример за грешка + какво е stack trace.

 - Да се добави във въведителната тема списък с най-честите (типични) грешки.

 

8) Възприехме многостъпков процес на разработка на главите от книгата, при който всяка тема преминава последователно през следните състояния:

 

1. templates-25-july

2. drafts-17-august

3. code-complete-24-august

4. pre-release-31-august

5. candidate-release-7-september

6. final-release-14-september

 

Идеята е темите да имат състояние. В началото започваме от темплейт и сме в състояние 1. templates-25-july. След това почваме да пишем някакъв текст и минаваме в състояние (2. drafts-17-august). Като продължим да пишем, минаваме в състояние 3. code-complete-24-august. Докато все още пишем текст, сме в това състояние. След като напишем текста, минаваме в режим на първа редакция (състояние 4. pre-release-31-august). Когато първият редактор приключи, минаваме в състояние на втора редакция (5. candidate-release-7-september). Когато втората редакция приключи, преминаваме в състояние „финална версия” (6. final-release-14-september).

 

При преминаване от едно състояние в друго не трием нищо, а копираме съответния файл. Внимание: копирането на файла става при навлизане в състоянието, а не при излизането от него. Следователно всеки автор като почне да пише първо трябва да копира своята глава от папка „1. templates-25-july” в папка „2. drafts-17-august” и да работи с файла от втората папка.

 

Стъпка N от процеса съдържа резултата от извършената работа на стъпки до N-1 включително. Примерно при приключване на стъпка "3. code-complete-24-august" резултатът от тази стъпка се копира в следващата стъпка: "4. pre-release-31-august".

 

При редакцията се разбрахме да сменяме името на файла, който редактираме, така че да започва с "_locked_". Това го правим с „SVN Rename”, а не обикновен rename, за да запазваме историята на промените (иначе тя се губи). В състояние "_locked_" темата не трябва да стои повече от 2 дни, защото иначе блокираме работата на други редактори.

 

9) Говорихме за начина, по който ще се редактират темите. Всеки има право да редактира всяка тема, дори и да не е посочен като редактор в списъка с разпределението на темите. Когато почне да редактира, слага "_locked_" пред името на файла и така другите виждат, че този файл е временно „зает”. След като приключи, резултатът е в следващата по ред директория и името е без "_locked_".

 

Редакторите трябва да работят в режим „Track changes” в MS Word. Те могат да правят няколко вида промени:

 - поправка на дребни правописни и стилистични грешки – прави се директно в текста

 - добавяне на нови абзаци, секции, пояснителни изречения и т.н. – прави се директно в текста

 - добавяне на предложения, въпроси и коментари – прави се като коментар в MS Word – този тип корекции подсказват на автора, че трябва да помисли и евентуално сам да направи промени в текста. Промените не се правят от редактора, а той само предлага да бъдат направени.

 

10) Срокове по проекта остават тези:

 - до 25 юли трябва да сме сформирали екипа и да сме започнали да пишем

 - до 17 август трябва всеки да е изпратил начална версия на своята тема

 - до 24 август трябва да сме приключили писането по всички теми

 - до 7 септември трябва да сме редактирали всички теми и да имаме финална версия

 - до 30 на септември трябва да сме отпечатали учебника на хартия

 

11) Лицензът на книгата остава непроменен.

 

12) Автори, които закъсняват сериозно със сроковете ще бъдат наказване с отнемане на темата им, при което тя ще бъде давана на друг автор.

 

13) Редактори, които не редактират качествено ще бъдат наказвани с отстраняване от проекта. Идеята е да редактираме текста старателно и да доставим високо качество, а не да се правим, че вършим работа и накрая книгата да остане с грешки и проблеми в текста.

 

14) Можете да допълвате списъка с чести грешки и речника за правилен превод в ръководството за писане на книга (Book-Writing-Guidelines-v0.9.doc).

 

15) При commit в SVN сървъра задължително слагайте коментар!

 

16) Моля разгледайте добре лекциите на НАРС и се запознайте какво има във всяка от тях. Така ще избегнете рефериране на материал, който не е използван. Примерно в темата цикли нямате право да давате примери с ArrayList, защото това се учи в много по-късна тема (структури от данни). Това е много важно! Затова се придържайте към лекциите (PDF файловете).

 

17) Моля, използвайте стиловете, дефинирани в темплейтите и не ги променяйте. Прочетете внимателно указанието за авторите (Book-Writing-Guidelines-v0.9.doc) и го следвайте.

 

18) Можете да ползвате wiki страничката на проекта за всякакви въпроси, които касаят проекта.

 

19) Създадох дискусионна група (мейлинг листа) за проекта.

Начална страница на групата: http://groups.google.com/group/intro-java-book

Имейл адрес на групата: intro-java-book@googlegroups.com

Моля, абонирайте се. Смятам да ползваме групата като основен механизъм за комуникация.
